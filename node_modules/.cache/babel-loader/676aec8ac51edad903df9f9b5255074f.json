{"ast":null,"code":"import _objectSpread from \"/home/robo/Documents/store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/robo/Documents/store/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //Provider \n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: []\n    };\n\n    this.setProducts = () => {\n      let tempproducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempproducts = [...tempproducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempproducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempproducts = [...this.state.products];\n      const index = tempproducts.index(this.getItem(id));\n      const product = tempproducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/robo/Documents/store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","setProducts","tempproducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","inCart","count","price","total","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,QAA7C;AAEA,MAAMC,cAAc,GAAGJ,KAAK,CAACK,aAAN,EAAvB,C,CACA;AACA;;AACA,MAAMC,eAAN,SAA8BL,SAA9B,CAAwC;AAAA;AAAA;AAAA,SACpCM,KADoC,GAC5B;AACJC,MAAAA,QAAQ,EAAE,EADN;AAEJL,MAAAA,aAAa,EAAEA,aAFX;AAGJM,MAAAA,IAAI,EAAC;AAHD,KAD4B;;AAAA,SAUpCC,WAVoC,GAUtB,MAAM;AAChB,UAAIC,YAAY,GAAG,EAAnB;AACAT,MAAAA,aAAa,CAACU,OAAd,CACIC,IAAI,IAAI;AACJ,cAAMC,UAAU,qBAAQD,IAAR,CAAhB;;AACAF,QAAAA,YAAY,GAAG,CAAC,GAAGA,YAAJ,EAAkBG,UAAlB,CAAf;AAEH,OALL;AAQJ,WAAKC,QAAL,CAAc,MAAI;AACd,eAAM;AAAEP,UAAAA,QAAQ,EAAEG;AAAZ,SAAN;AACH,OAFD;AAKC,KAzBmC;;AAAA,SA2BpCK,OA3BoC,GA2BzBC,EAAD,IAAQ;AACd,YAAMC,OAAO,GAAG,KAAKX,KAAL,CAAWC,QAAX,CAAoBW,IAApB,CAAyBN,IAAI,IAAIA,IAAI,CAACI,EAAL,KAAYA,EAA7C,CAAhB;AACA,aAAOC,OAAP;AAAmB,KA7Ba;;AAAA,SAgCxCE,YAhCwC,GAgCxBH,EAAD,IAAQ;AACnB,YAAMC,OAAO,GAAG,KAAKF,OAAL,CAAaC,EAAb,CAAhB;AACA,WAAKF,QAAL,CAAc,MAAI;AACd,eAAO;AAACZ,UAAAA,aAAa,EAACe;AAAf,SAAP;AAEH,OAHD;AAKH,KAvCuC;;AAAA,SAyCxCG,SAzCwC,GAyC3BJ,EAAD,IAAQ;AAChB,UAAIN,YAAY,GAAG,CAAC,GAAG,KAAKJ,KAAL,CAAWC,QAAf,CAAnB;AACC,YAAMc,KAAK,GAAGX,YAAY,CAACW,KAAb,CAAmB,KAAKN,OAAL,CAAaC,EAAb,CAAnB,CAAd;AACA,YAAMC,OAAO,GAAEP,YAAY,CAACW,KAAD,CAA3B;AACAJ,MAAAA,OAAO,CAACK,MAAR,GAAiB,IAAjB;AACAL,MAAAA,OAAO,CAACM,KAAR,GAAgB,CAAhB;AACA,YAAMC,KAAK,GAACP,OAAO,CAACO,KAApB;AACAP,MAAAA,OAAO,CAACQ,KAAR,GAAgBD,KAAhB;AACJ,KAjDuC;AAAA;;AAOvCE,EAAAA,iBAAiB,GAAE;AACf,SAAKjB,WAAL;AACH;;AA0CFkB,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,cAAD,CAAgB,QAAhB;AACC,MAAA,KAAK,oBACC,KAAKrB,KADN;AAEFa,QAAAA,YAAY,EAAE,KAAKA,YAFjB;AAGFC,QAAAA,SAAS,EAAE,KAAKA;AAHd,QADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAMI,KAAKQ,KAAL,CAAWC,QANf,CADJ;AAYH;;AAhEuC;;AAmExC,MAAMC,eAAe,GAAG3B,cAAc,CAAC4B,QAAvC;AAGA,SAAS1B,eAAT,EAA0ByB,eAA1B","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from './data'\n\nconst ProductContext = React.createContext();\n//Provider \n//Consumer\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart:[]\n     };\n    \n componentDidMount(){\n     this.setProducts()\n }   \n    setProducts = () => {\n        let tempproducts = [];\n        storeProducts.forEach(\n            item => {\n                const singleItem = { ...item }\n                tempproducts = [...tempproducts, singleItem]\n\n            }\n\n        )\n    this.setState(()=>{\n        return{ products: tempproducts}\n    }\n\n    )\n    }\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id )\n        return product    }\n       \n\nhandleDetail = (id) => {\n    const product = this.getItem(id);\n    this.setState(()=>{\n        return {detailProduct:product}\n\n    }\n    )\n}\n\naddToCart = (id) => {\n    let tempproducts = [...this.state.products]\n     const index = tempproducts.index(this.getItem(id))\n     const product =tempproducts[index]\n     product.inCart = true\n     product.count = 1;\n     const price=product.price;\n     product.total = price\n}\n\nrender() {\n    return (\n        <ProductContext.Provider\n         value={{\n            ...this.state,\n            handleDetail: this.handleDetail,\n            addToCart: this.addToCart\n        }}>\n           {this.props.children}\n\n            \n        </ProductContext.Provider>\n    );\n}\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\n\nexport { ProductProvider, ProductConsumer }\n\n"]},"metadata":{},"sourceType":"module"}