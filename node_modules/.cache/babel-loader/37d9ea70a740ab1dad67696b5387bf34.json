{"ast":null,"code":"import _objectSpread from \"/home/robo/Documents/store/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/robo/Documents/store/src/context.js\";\nimport React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from './data';\nconst ProductContext = React.createContext(); //Provider \n//Consumer\n\nclass ProductProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [],\n      detailProduct: detailProduct,\n      cart: [],\n      modalOpen: false,\n      modalProduct: detailProduct,\n      cartSubTotal: 0,\n      cartTax: 0,\n      cartTotal: 0\n    };\n\n    this.setProducts = () => {\n      let tempproducts = [];\n      storeProducts.forEach(item => {\n        const singleItem = _objectSpread({}, item);\n\n        tempproducts = [...tempproducts, singleItem];\n      });\n      this.setState(() => {\n        return {\n          products: tempproducts\n        };\n      });\n    };\n\n    this.getItem = id => {\n      const product = this.state.products.find(item => item.id === id);\n      return product;\n    };\n\n    this.handleDetail = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          detailProduct: product\n        };\n      });\n    };\n\n    this.addToCart = id => {\n      let tempproducts = [...this.state.products];\n      const index = tempproducts.indexOf(this.getItem(id));\n      const product = tempproducts[index];\n      product.inCart = true;\n      product.count = 1;\n      const price = product.price;\n      product.total = price;\n      this.setState(() => {\n        return {\n          products: tempproducts,\n          cart: [...this.state.cart, product]\n        };\n      }, () => {\n        this.addTotals(id);\n      });\n    };\n\n    this.openModal = id => {\n      const product = this.getItem(id);\n      this.setState(() => {\n        return {\n          modalProduct: product,\n          modalOpen: true\n        };\n      });\n    };\n\n    this.closeModal = () => {\n      this.setState(() => {\n        return {\n          modalOpen: false\n        };\n      });\n    };\n\n    this.increment = id => {\n      this.addTotals(id);\n    };\n\n    this.decrement = id => {\n      return console.log(\"decrenmentation\");\n    };\n\n    this.removeItem = id => {\n      return console.log(\"removed\");\n    };\n\n    this.clearCart = () => {\n      this.setState(() => {\n        return {\n          cart: []\n        };\n      });\n    };\n\n    this.addTotals = () => {\n      let subTotal = 0;\n      this.state.cart.map(item => subTotal += item.total);\n      const tempTax = subTotal * 0.1;\n      const tax = parseFloat(tempTax.toFixed(2));\n      const total = subTotal + tax;\n      this.setState(() => {\n        return {\n          cartSubTotal: subTotal,\n          cartTax: tax,\n          cartTotal: total\n        };\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.setProducts();\n  }\n\n  render() {\n    return React.createElement(ProductContext.Provider, {\n      value: _objectSpread({}, this.state, {\n        handleDetail: this.handleDetail,\n        addToCart: this.addToCart,\n        openModal: this.openModal,\n        closeModal: this.closeModal,\n        increment: this.increment,\n        decrement: this.decrement,\n        removeItem: this.removeItem,\n        clearCart: this.clearCart\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\n\nconst ProductConsumer = ProductContext.Consumer;\nexport { ProductProvider, ProductConsumer };","map":{"version":3,"sources":["/home/robo/Documents/store/src/context.js"],"names":["React","Component","storeProducts","detailProduct","ProductContext","createContext","ProductProvider","state","products","cart","modalOpen","modalProduct","cartSubTotal","cartTax","cartTotal","setProducts","tempproducts","forEach","item","singleItem","setState","getItem","id","product","find","handleDetail","addToCart","index","indexOf","inCart","count","price","total","addTotals","openModal","closeModal","increment","decrement","console","log","removeItem","clearCart","subTotal","map","tempTax","tax","parseFloat","toFixed","componentDidMount","render","props","children","ProductConsumer","Consumer"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { storeProducts, detailProduct } from './data'\n\nconst ProductContext = React.createContext();\n//Provider \n//Consumer\nclass ProductProvider extends Component {\n    state = {\n        products: [],\n        detailProduct: detailProduct,\n        cart:[],\n        modalOpen:false,\n        modalProduct:detailProduct,\n        cartSubTotal:0,\n        cartTax:0,\n        cartTotal: 0\n     };\n    \n componentDidMount(){\n     this.setProducts()\n }   \n    setProducts = () => {\n        let tempproducts = [];\n        storeProducts.forEach(\n            item => {\n                const singleItem = { ...item }\n                tempproducts = [...tempproducts, singleItem]\n\n            }\n\n        )\n    this.setState(()=>{\n        return{ products: tempproducts}\n    }\n\n    )\n    }\n\n    getItem = (id) => {\n        const product = this.state.products.find(item => item.id === id )\n        return product    }\n       \n\nhandleDetail = (id) => {\n    const product = this.getItem(id);\n    this.setState(()=>{\n        return {detailProduct:product}\n\n    }\n    )\n}\n\naddToCart = (id) => {\n    let tempproducts = [...this.state.products]\n     const index = tempproducts.indexOf(this.getItem(id))\n     const product =tempproducts[index]\n     product.inCart = true\n     product.count = 1;\n     const price=product.price;\n     product.total = price\n     this.setState(\n         ()=> {\n         return { products:tempproducts,cart:[...this.state.cart,\n            product] }\n\n    },\n    () => {\n        this.addTotals(id)\n    }\n     \n     )\n}\nopenModal = (id) =>{\n    const product = this.getItem(id)\n    this.setState(() => {\n        return{modalProduct:product,modalOpen:true}\n    })\n}\ncloseModal = () =>\n{\n    this.setState(() =>{ \n    return{modalOpen:false}\n    })\n}\nincrement = (id) =>{\n   this.addTotals(id)\n}\ndecrement = (id) =>{\n    return console.log(\"decrenmentation\")\n}\nremoveItem = id =>{\n    return console.log(\"removed\")\n}\nclearCart = () => {\n    this.setState(() =>{\n        return {cart: []}\n    })\n}\naddTotals = () =>\n{\n    let subTotal = 0;\n    this.state.cart.map(item =>(subTotal += item.total))\n   const tempTax = subTotal * 0.1\n   const tax = parseFloat(tempTax.toFixed(2))\n   const total = subTotal + tax\n   this.setState(()=>\n   {\n       return{\n           cartSubTotal:subTotal,\n           cartTax:tax,\n           cartTotal:total\n       }\n   })\n\n}\nrender() {\n    return (\n        <ProductContext.Provider\n         value={{\n            ...this.state,\n            handleDetail: this.handleDetail,\n            addToCart: this.addToCart,\n            openModal: this.openModal,\n            closeModal: this.closeModal,\n            increment: this.increment,\n            decrement: this.decrement,\n            removeItem: this.removeItem,\n            clearCart: this.clearCart\n        }}>\n           {this.props.children}\n\n            \n        </ProductContext.Provider>\n    );\n}\n}\n\nconst ProductConsumer = ProductContext.Consumer;\n\n\nexport { ProductProvider, ProductConsumer }\n\n"]},"metadata":{},"sourceType":"module"}